buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "io.jmix.gradle:jmix-gradle-plugin:1.2.0"
    }
}

if (project.hasProperty('ghargs')) {
    project.ghargs.split(',').each {
        def (key, value) = it.split('=')
        def k = ((String) key).trim().replace("'", "")
        def v = ((String) value).trim().replace("'", "");
        ext[k] = v;
    }
}

ext.aliRepo = [
        snapshot: 'https://repo-snapshot.sikada.cn/',
        release: 'https://repo.sikada.cn/',
        username:
                project.hasProperty("skd.repo.username") ? project['skd.repo.username'] : '',
        password:
                project.hasProperty("skd.repo.password") ? project['skd.repo.password'] : ''
]

group = 'cn.jmix'
version = '0.0.1-SNAPSHOT'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.jmix'

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://global.repo.jmix.io/repository/public'
        }
    }

    jmix {
        bomVersion = '1.2.2'
        projectId = 'imgcrop'
    }

    group = this.group
    version = this.version

    def props = new Properties()
    buildFile.withInputStream { props.load(it) }
    def subArchivesBaseName = props.getProperty('archivesBaseName')
    def archName = subArchivesBaseName.substring(1, subArchivesBaseName.length() - 1)

    java {
        withSourcesJar()
    }

    artifacts {
        archives sourcesJar
    }

    publishing {
        repositories {
            maven {
                url = version.indexOf("snapshot")>-1? aliRepo.snapshot:aliRepo.release
                credentials {
                    username aliRepo.username
                    password aliRepo.password
                }
                allowInsecureProtocol = true
            }
        }
        publications {
            javaMaven(MavenPublication) {
                artifactId = archName
                from components.java
            }
        }
    }

    // remove after https://youtrack.jetbrains.com/issue/IDEA-227215 is fixed
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}
